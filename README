This repository contains the author's Vim configuration as well as a GTK
configuration file that the author had to write to achieve a satisfactory
configuration for gVim (actually vim.gtk, available in the Debian GNU/Linux
package vim-gtk).

==============================================================================
Precisely, the files in this repository are:

.vimrc, the initialization commands for Vim.

        This file is heavily commented. I guess the most "interesting" part is
        the affectation of the backupdir and directory options (the
        directories where the backup files and the swap files are written
        respectively). The file creates and uses the directories ~/.vim/backup
        and ~/.vim/swap.

        Note also that the file attempts to apply the Moria color scheme. You
        can get it from http://www.vim.org/scripts/script.php?script_id=1464

----------------------------------------------
.gtkrc-2.0, the configuration file for GTK.

        Thanks to this file, there is no unpleasant white patch at the bottom
        of the gVim window when gVim is used with a window manager that does
        not respect the size hints (e.g. a tiling window manager).

----------------------------------------------
install_thierr26_vim-gtk_config, a shell (dash) script to install the files.

        This script copies .vimrc and .gtkrc-2.0 to the user's home directory
        or to the directory specified on the command line. Launch the script
        with the --help option for a more detailed documentation.

        Note that no backup of the overwritten files is done.

----------------------------------------------
pull_vim_plugins, a shell (dash) script to update the vim plugins.

        This script loops over the directories in ~/.vim/bundle (which is
        usually the directory where the Vim plugins are installed, at least
        for Pathogen users) and runs "git pull" in those directories.

        The script checks that a directory contains a Git repository and that
        a remote called "origin" is defined before running "git pull" in this
        directory.

        A directory other than ~/.vim/bundle can be given as argument, in case
        your Vim plugins are in another directory.

        Some options can be used to change the behavior of the script, most
        notably:
        -l or --list which lists the plugins without running "git pull".
        -c or --clone-script which must be used along with -l or --list and
        causes a script to be generated. The generated script contains the
        "git clone" commands that could be run to reinstall the plugins.

        Launch the script with the --help option for a more detailed
        documentation.

----------------------------------------------
clone_vim_plugins, an example of script generated by pull_vim_plugins.

        This script contains the "git clone" commands that the author would
        run to reinstall its vim plugins.

----------------------------------------------
README, the present file.

----------------------------------------------
LICENSE, the license file (Unlicense license).

==============================================================================
Author: Thierry Rascle (thierr26@free.fr)

Licensed under the Unlicense license (see http://unlicense.org).
